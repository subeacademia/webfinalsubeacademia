import { Injectable } from '@angular/core';
import { Observable, of } from 'rxjs';

export interface HomePageContent {
  typewriterPhrases: string[];
  title?: string;
}

@Injectable({ providedIn: 'root' })
export class HomeConfigService {
  
  // Configuraci√≥n local por defecto
  private defaultConfig: { [key: string]: HomePageContent } = {
    'es': {
      title: 'Potencia tu Talento en la Era de la Inteligencia Artificial',
      typewriterPhrases: [
        'Implementa IA de forma √Ågil, Responsable y Sostenible con nuestro Framework ARES-AI¬©.',
        'Desarrolla las 13 competencias clave que tu equipo necesita para liderar la transformaci√≥n digital.',
        'Transforma tu organizaci√≥n con nuestra plataforma de aprendizaje adaptativo AVE-AI.'
      ]
    },
    'en': {
      title: 'Power Your Talent in the Age of Artificial Intelligence',
      typewriterPhrases: [
        'Implement AI in an Agile, Responsible and Sustainable way with our ARES-AI¬© Framework.',
        'Develop the 13 key competencies your team needs to lead digital transformation.',
        'Transform your organization with our adaptive learning platform AVE-AI.'
      ]
    },
    'pt': {
      title: 'Potencialize seu Talento na Era da Intelig√™ncia Artificial',
      typewriterPhrases: [
        'Implemente IA de forma √Ågil, Respons√°vel e Sustent√°vel com nosso Framework ARES-AI¬©.',
        'Desenvolva as 13 compet√™ncias-chave que sua equipe precisa para liderar a transforma√ß√£o digital.',
        'Transforme sua organiza√ß√£o com nossa plataforma de aprendizado adaptativo AVE-AI.'
      ]
    }
  };

  getHomePageContent(lang: 'es' | 'en' | 'pt'): Observable<HomePageContent> {
    console.log('üè† HomeConfigService: Obteniendo contenido para idioma:', lang);
    const content = this.defaultConfig[lang] || this.defaultConfig['es'];
    console.log('üìÑ Contenido retornado:', content);
    return of(content);
  }

  // M√©todo para actualizar la configuraci√≥n (para uso futuro del admin)
  updateHomeTitle(lang: 'es' | 'en' | 'pt', title: string): void {
    if (this.defaultConfig[lang]) {
      this.defaultConfig[lang].title = title;
      console.log('‚úÖ T√≠tulo actualizado para', lang, ':', title);
    }
  }

  updateTypewriterPhrases(lang: 'es' | 'en' | 'pt', phrases: string[]): void {
    if (this.defaultConfig[lang]) {
      this.defaultConfig[lang].typewriterPhrases = phrases;
      console.log('‚úÖ Frases actualizadas para', lang, ':', phrases);
    }
  }

  // M√©todo de prueba para compatibilidad
  async testAndInitializeHomeContent(lang: 'es' | 'en' | 'pt'): Promise<void> {
    console.log('üß™ HomeConfigService: Inicializaci√≥n simulada para idioma:', lang);
    // No hay nada que inicializar en este servicio local
    return Promise.resolve();
  }
}
